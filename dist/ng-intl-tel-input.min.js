angular.module("ngIntlTelInput",[]);angular.module("ngIntlTelInput").provider("ngIntlTelInput",function(){var me=this;var props={};var setFn=function(obj){if(typeof obj==="object"){for(var key in obj){props[key]=obj[key]}}};me.set=setFn;me.$get=["$log",function($log){return Object.create(me,{init:{value:function(elm){if(!window.intlTelInputUtils){$log.warn("intlTelInputUtils is not defined. Formatting and validation will not work.")}elm.intlTelInput(props)}}})}]});angular.module("ngIntlTelInput").directive("ngIntlTelInput",["ngIntlTelInput","$log","$window","$parse",function(ngIntlTelInput,$log,$window,$parse){return{restrict:"A",require:"ngModel",link:function(scope,elm,attr,ctrl){if(!!attr.type&&(attr.type!=="text"&&attr.type!=="tel")||elm[0].tagName!=="INPUT"){$log.warn("ng-intl-tel-input can only be applied to a *text* or *tel* input");return}if(attr.initialCountry){ngIntlTelInput.set({initialCountry:attr.initialCountry})}if(attr.preferredCountries){var value=$parse(attr.preferredCountries)(scope);if(angular.isArray(value)){ngIntlTelInput.set({preferredCountries:value})}}ngIntlTelInput.init(elm);function setSelectedCountryData(model){var getter=$parse(model);var setter=getter.assign;setter(scope,elm.intlTelInput("getSelectedCountryData"))}function handleCountryChange(){setSelectedCountryData(attr.selectedCountry)}function cleanUp(){angular.element($window).off("countrychange",handleCountryChange)}if(attr.selectedCountry){setSelectedCountryData(attr.selectedCountry);angular.element($window).on("countrychange",handleCountryChange);scope.$on("$destroy",cleanUp)}ctrl.$validators.ngIntlTelInput=function(value){if(value||elm[0].value.length>0){return elm.intlTelInput("isValidNumber")}else{return true}};ctrl.$parsers.push(function(value){return elm.intlTelInput("getNumber")});ctrl.$formatters.push(function(value){if(value){if(value.charAt(0)!=="+"){value="+"+value}elm.intlTelInput("setNumber",value)}return value})}}}]);